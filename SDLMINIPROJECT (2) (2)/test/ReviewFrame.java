





import ClientServer.ClientServer;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.Timer;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import sun.swing.table.DefaultTableCellHeaderRenderer;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author admin
 */
public class ReviewFrame extends javax.swing.JFrame {
Timer timer;
public HashMap<Integer,ClientServer>QuestionAnswerList=null;
    /**
     * Creates new form MainFrame
     */
    public ReviewFrame() throws IOException, ClassNotFoundException {
       initComponents();
        this.setTitle("Online Aptitude Test");
       
       ClientServer Time=QuestionFrame.GetTime();  
       
       Minutes.setText(""+Time.min);
       Seconds.setText(""+Time.sec);
        
      
        timer=new Timer(1000,new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if(Time.sec==0)
                {
                    Time.sec=60;
                    Time.min--;       
                }
                if(Time.min<0){
                    if(Dialogbox.flag==0)
                    JOptionPane.showMessageDialog(rootPane,"times up!!","Stopped",0);
                    Time.min=0;
                    Time.sec=0;
                    timer.stop();
                }else
                {
                    Time.sec--;
                    if(Time.sec<10)
                           Seconds.setText("0"+Time.sec);
                    else
                            Seconds.setText(""+Time.sec);
                    
                    if(Time.min<10)
                           Minutes.setText("0"+Time.min);
                    else
                            Minutes.setText(""+Time.min);

                }
            }
        });
        timer.start();
        DisplayAnswer();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MainPanel = new javax.swing.JPanel();
        UpperPanel = new javax.swing.JPanel();
        AllTheBestLabel = new javax.swing.JLabel();
        Colon = new javax.swing.JLabel();
        Seconds = new javax.swing.JLabel();
        ICON = new javax.swing.JLabel();
        icon = new javax.swing.JLabel();
        Minutes = new javax.swing.JLabel();
        TablePanel = new javax.swing.JScrollPane();
        AnswerTable = new javax.swing.JTable();
        LowerPanel = new javax.swing.JPanel();
        BackButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        MainPanel.setBackground(new java.awt.Color(255, 255, 255));

        UpperPanel.setBackground(new java.awt.Color(0, 0, 51));

        AllTheBestLabel.setFont(new java.awt.Font("Calibri", 0, 30)); // NOI18N
        AllTheBestLabel.setForeground(new java.awt.Color(255, 255, 255));
        AllTheBestLabel.setText("ALL THE BEST!!");

        Colon.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        Colon.setForeground(new java.awt.Color(255, 255, 255));
        Colon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Colon.setText(":");

        Seconds.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        Seconds.setForeground(new java.awt.Color(255, 255, 255));
        Seconds.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Seconds.setText("00");

        ICON.setIcon(new javax.swing.ImageIcon(getClass().getResource("/clock-8-24.png"))); // NOI18N

        icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/thumbs-up-3-32.png"))); // NOI18N

        Minutes.setFont(new java.awt.Font("Calibri", 0, 24)); // NOI18N
        Minutes.setForeground(new java.awt.Color(255, 255, 255));
        Minutes.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Minutes.setText("00");

        javax.swing.GroupLayout UpperPanelLayout = new javax.swing.GroupLayout(UpperPanel);
        UpperPanel.setLayout(UpperPanelLayout);
        UpperPanelLayout.setHorizontalGroup(
            UpperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UpperPanelLayout.createSequentialGroup()
                .addContainerGap(189, Short.MAX_VALUE)
                .addGroup(UpperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, UpperPanelLayout.createSequentialGroup()
                        .addComponent(icon)
                        .addGap(18, 18, 18)
                        .addComponent(AllTheBestLabel)
                        .addGap(253, 253, 253))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, UpperPanelLayout.createSequentialGroup()
                        .addComponent(ICON)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Minutes)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Colon)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Seconds)
                        .addGap(18, 18, 18))))
        );
        UpperPanelLayout.setVerticalGroup(
            UpperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UpperPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(UpperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AllTheBestLabel)
                    .addComponent(icon))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(UpperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ICON, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(UpperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Seconds)
                        .addComponent(Colon)
                        .addComponent(Minutes)))
                .addContainerGap())
        );

        AnswerTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        AnswerTable.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        AnswerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Question no", "Response"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TablePanel.setViewportView(AnswerTable);

        LowerPanel.setBackground(new java.awt.Color(0, 0, 51));

        BackButton.setBackground(new java.awt.Color(255, 255, 255));
        BackButton.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        BackButton.setForeground(new java.awt.Color(0, 0, 51));
        BackButton.setText("Back");
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout LowerPanelLayout = new javax.swing.GroupLayout(LowerPanel);
        LowerPanel.setLayout(LowerPanelLayout);
        LowerPanelLayout.setHorizontalGroup(
            LowerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LowerPanelLayout.createSequentialGroup()
                .addGap(287, 287, 287)
                .addComponent(BackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        LowerPanelLayout.setVerticalGroup(
            LowerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LowerPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(BackButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout MainPanelLayout = new javax.swing.GroupLayout(MainPanel);
        MainPanel.setLayout(MainPanelLayout);
        MainPanelLayout.setHorizontalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(UpperPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(MainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LowerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(MainPanelLayout.createSequentialGroup()
                .addGap(197, 197, 197)
                .addComponent(TablePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        MainPanelLayout.setVerticalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainPanelLayout.createSequentialGroup()
                .addComponent(UpperPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(TablePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 79, Short.MAX_VALUE)
                .addComponent(LowerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void DisplayAnswer(){
        DefaultTableModel Model=new DefaultTableModel(new String[]{"QuestionNo","Answer"},0);
        String Option=new String();
        String QuestionNo=null;
        for(int i=1;i<=15;i++){
            ClientServer obj=QuestionFrame.Qframe.AnswerList.get(i);
            if(obj.isAnswered==1){
                if(obj.UserOption==1)
                    Option="a";
                else if(obj.UserOption==2)
                    Option="b";
                    else if(obj.UserOption==3)
                    Option="c";
                        else
                        Option="d";
                }
            else
            {
                Option="-";
            }
            Model.addRow(new Object[]{Integer.toString(obj.QuestionNo),Option});
        }
        AnswerTable.setModel(Model);
       
      
        
        TableColumn col=AnswerTable.getColumnModel().getColumn(0);
        DefaultTableCellRenderer obj1=new DefaultTableCellHeaderRenderer();
        obj1.setHorizontalTextPosition(DefaultTableCellRenderer.CENTER);
          AnswerTable.getColumnModel().getColumn(0).setHeaderRenderer(obj1);
        
        col.setCellRenderer(obj1);
        
        TableColumn col1=AnswerTable.getColumnModel().getColumn(1);
        DefaultTableCellRenderer obj2=new DefaultTableCellHeaderRenderer();
        obj2.setHorizontalTextPosition(DefaultTableCellRenderer.CENTER);
        AnswerTable.getColumnModel().getColumn(1).setHeaderRenderer(obj2);
        col1.setCellRenderer(obj2);
        
        
    }
    
    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
    QuestionFrame.Qframe.setVisible(true);
    this.setVisible(false);
   
        
    }//GEN-LAST:event_BackButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new ReviewFrame().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(ReviewFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(ReviewFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AllTheBestLabel;
    private javax.swing.JTable AnswerTable;
    private javax.swing.JButton BackButton;
    private javax.swing.JLabel Colon;
    private javax.swing.JLabel ICON;
    private javax.swing.JPanel LowerPanel;
    private javax.swing.JPanel MainPanel;
    private javax.swing.JLabel Minutes;
    private javax.swing.JLabel Seconds;
    private javax.swing.JScrollPane TablePanel;
    private javax.swing.JPanel UpperPanel;
    private javax.swing.JLabel icon;
    // End of variables declaration//GEN-END:variables
}
